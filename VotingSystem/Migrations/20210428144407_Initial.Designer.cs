// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VotingSystem.Data;

namespace VotingSystem.Migrations
{
    [DbContext(typeof(VotingSystemContext))]
    [Migration("20210428144407_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VotingSystem.Models.BallotModels", b =>
                {
                    b.Property<int>("BallotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CandidateOneID")
                        .HasColumnType("int");

                    b.Property<int?>("CandidateTwoID")
                        .HasColumnType("int");

                    b.Property<int?>("ElectionID")
                        .HasColumnType("int");

                    b.Property<int?>("IssueID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<bool>("VotedForIssue")
                        .HasColumnType("bit");

                    b.HasKey("BallotID");

                    b.HasIndex("CandidateOneID");

                    b.HasIndex("CandidateTwoID");

                    b.HasIndex("ElectionID");

                    b.HasIndex("IssueID");

                    b.HasIndex("UserID");

                    b.ToTable("Ballot");
                });

            modelBuilder.Entity("VotingSystem.Models.CandidateModels", b =>
                {
                    b.Property<int>("CandidateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ElectionID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Race")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("CandidateID");

                    b.HasIndex("ElectionID");

                    b.ToTable("Candidate");
                });

            modelBuilder.Entity("VotingSystem.Models.ElectionModels", b =>
                {
                    b.Property<int>("ElectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Open")
                        .HasColumnType("bit");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ElectionID");

                    b.ToTable("Election");
                });

            modelBuilder.Entity("VotingSystem.Models.IssueModels", b =>
                {
                    b.Property<int>("IssueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ElectionID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VotesAgainst")
                        .HasColumnType("int");

                    b.Property<int>("VotesFor")
                        .HasColumnType("int");

                    b.HasKey("IssueID");

                    b.HasIndex("ElectionID");

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("VotingSystem.Models.UserModels", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("VotingSystem.Models.BallotModels", b =>
                {
                    b.HasOne("VotingSystem.Models.CandidateModels", "CandidateOne")
                        .WithMany()
                        .HasForeignKey("CandidateOneID");

                    b.HasOne("VotingSystem.Models.CandidateModels", "CandidateTwo")
                        .WithMany()
                        .HasForeignKey("CandidateTwoID");

                    b.HasOne("VotingSystem.Models.ElectionModels", "election")
                        .WithMany()
                        .HasForeignKey("ElectionID");

                    b.HasOne("VotingSystem.Models.IssueModels", "issue")
                        .WithMany()
                        .HasForeignKey("IssueID");

                    b.HasOne("VotingSystem.Models.UserModels", "user")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("VotingSystem.Models.CandidateModels", b =>
                {
                    b.HasOne("VotingSystem.Models.ElectionModels", "Election")
                        .WithMany()
                        .HasForeignKey("ElectionID");
                });

            modelBuilder.Entity("VotingSystem.Models.IssueModels", b =>
                {
                    b.HasOne("VotingSystem.Models.ElectionModels", "Election")
                        .WithMany()
                        .HasForeignKey("ElectionID");
                });
#pragma warning restore 612, 618
        }
    }
}
